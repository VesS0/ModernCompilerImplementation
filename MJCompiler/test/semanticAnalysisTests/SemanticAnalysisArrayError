program MJProgram
	int global, globalComma;
	int globalArray[], glovalInt, globalArray2[];
	char chrArr[];
{	
	int badReturnIntIntArr(int t, const int g)
	int a[], b;
	{
		return a; // should not work, int != int[]
	}
	
	char badReturnCharCharArr(int t, const int g)
	{
		return chrArr; // should not work, char != char[]
	}
	
	bool badReturnBoolBoolArr(bool ar)
	bool bar[];
	{
		return bar; // bool != bool[]
	}
	
	char arrayTesting()
	int a[],b[],c,d[];
	char k[],g[],h,j[];
	bool z[],x,c[],v[]; 
	{
		c = 3;
		b = new int[c];
		j = new char[4];
		z = new bool[c+3];
		
		b[1] = 3; b[2] = 1;
		j[1] = 'a'; j[3] = 'k';
		z[2] = true; z[0] = false;
		
		b[0] = b[1] + b[2];
		b[1] = z[2] - j[1];
		
		return g[2];
	}

	int WrongArrayTypeReturned()
	char wrong[];
	{
		return wrong[2];
	}
	
	void SameNameMethodDifferentSignature(){}
	// void SameNameMethodDifferentSignature(int a, int b){}
	// int  SameNameMethodDifferentSignature() {return 1;}
	
	int FunctionCalled(int a, bool b, char c, bool d, int e, char f, bool g, char t[])
	{
		return a + b*e;
	}
	
	int FunctionCaller()
	int a,b,e;
	bool d[], k[];
	char c;
	char f, arrr[];
	bool g;
	{
		a= 3;
		d = true;
		c = 'k';
		print(c, arrr[2]);
		
		return FunctionCalled(a, k, c, d[2], 2*a, 'c', false, d);
	}
}