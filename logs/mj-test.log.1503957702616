INFO  00:01:41,475 - Compiling source file: C:\Users\Jelena\workspace\ModernJavaCompiler\test\program.mj
INFO  00:01:41,484 - #12 program
INFO  00:01:41,485 - #50 P
INFO  00:01:41,485 - #4 const
INFO  00:01:41,485 - #50 int
INFO  00:01:41,485 - #50 size
INFO  00:01:41,485 - #28 =
INFO  00:01:41,485 - #49 10
INFO  00:01:41,485 - #44 ;
INFO  00:01:41,485 - #3 class
INFO  00:01:41,485 - #50 Table
INFO  00:01:41,485 - #17 {
INFO  00:01:41,485 - #50 int
INFO  00:01:41,485 - #50 pos
INFO  00:01:41,486 - #19 [
INFO  00:01:41,486 - #20 ]
INFO  00:01:41,486 - #45 ,
INFO  00:01:41,486 - #50 neg
INFO  00:01:41,486 - #19 [
INFO  00:01:41,486 - #20 ]
INFO  00:01:41,486 - #44 ;
INFO  00:01:41,486 - #17 {
INFO  00:01:41,486 - #16 void
INFO  00:01:41,487 - #50 putp
INFO  00:01:41,487 - #21 (
INFO  00:01:41,487 - #50 int
INFO  00:01:41,487 - #50 a
INFO  00:01:41,487 - #45 ,
INFO  00:01:41,487 - #50 int
INFO  00:01:41,487 - #50 idx
INFO  00:01:41,487 - #22 )
INFO  00:01:41,487 - #17 {
INFO  00:01:41,487 - #50 this
INFO  00:01:41,487 - #46 .
INFO  00:01:41,487 - #50 pos
INFO  00:01:41,488 - #19 [
INFO  00:01:41,488 - #50 idx
INFO  00:01:41,488 - #20 ]
INFO  00:01:41,488 - #28 =
INFO  00:01:41,488 - #50 a
INFO  00:01:41,488 - #44 ;
INFO  00:01:41,488 - #18 }
INFO  00:01:41,488 - #16 void
INFO  00:01:41,488 - #50 putn
INFO  00:01:41,488 - #21 (
INFO  00:01:41,488 - #50 int
INFO  00:01:41,488 - #50 a
INFO  00:01:41,488 - #45 ,
INFO  00:01:41,489 - #50 int
INFO  00:01:41,489 - #50 idx
INFO  00:01:41,489 - #22 )
INFO  00:01:41,489 - #17 {
INFO  00:01:41,489 - #50 this
INFO  00:01:41,489 - #46 .
INFO  00:01:41,489 - #50 neg
INFO  00:01:41,489 - #19 [
INFO  00:01:41,489 - #50 idx
INFO  00:01:41,489 - #20 ]
INFO  00:01:41,489 - #28 =
INFO  00:01:41,489 - #50 a
INFO  00:01:41,489 - #44 ;
INFO  00:01:41,489 - #18 }
INFO  00:01:41,489 - #50 int
INFO  00:01:41,490 - #50 getp
INFO  00:01:41,490 - #21 (
INFO  00:01:41,490 - #50 int
INFO  00:01:41,490 - #50 idx
INFO  00:01:41,490 - #22 )
INFO  00:01:41,490 - #17 {
INFO  00:01:41,490 - #14 return
INFO  00:01:41,490 - #50 pos
INFO  00:01:41,490 - #19 [
INFO  00:01:41,490 - #50 idx
INFO  00:01:41,490 - #20 ]
INFO  00:01:41,490 - #44 ;
INFO  00:01:41,490 - #18 }
INFO  00:01:41,490 - #50 int
INFO  00:01:41,490 - #50 getn
INFO  00:01:41,491 - #21 (
INFO  00:01:41,491 - #50 int
INFO  00:01:41,491 - #50 idx
INFO  00:01:41,491 - #22 )
INFO  00:01:41,491 - #17 {
INFO  00:01:41,491 - #14 return
INFO  00:01:41,491 - #50 neg
INFO  00:01:41,491 - #19 [
INFO  00:01:41,491 - #50 idx
INFO  00:01:41,491 - #20 ]
INFO  00:01:41,491 - #44 ;
INFO  00:01:41,491 - #18 }
INFO  00:01:41,492 - #18 }
INFO  00:01:41,492 - #18 }
INFO  00:01:41,492 - #50 Table
INFO  00:01:41,492 - #50 val
INFO  00:01:41,492 - #44 ;
INFO  00:01:41,492 - #17 {
INFO  00:01:41,492 - #16 void
INFO  00:01:41,492 - #50 f
INFO  00:01:41,492 - #21 (
INFO  00:01:41,492 - #50 char
INFO  00:01:41,492 - #50 ch
INFO  00:01:41,493 - #45 ,
INFO  00:01:41,493 - #50 int
INFO  00:01:41,493 - #50 a
INFO  00:01:41,493 - #45 ,
INFO  00:01:41,493 - #50 int
INFO  00:01:41,493 - #46 .
INFO  00:01:41,493 - #46 .
INFO  00:01:41,493 - #46 .
INFO  00:01:41,493 - #50 vargs
INFO  00:01:41,493 - #22 )
INFO  00:01:41,493 - #50 int
INFO  00:01:41,493 - #50 x
INFO  00:01:41,493 - #44 ;
INFO  00:01:41,494 - #17 {
INFO  00:01:41,494 - #50 x
INFO  00:01:41,494 - #28 =
INFO  00:01:41,494 - #50 vargs
INFO  00:01:41,494 - #19 [
INFO  00:01:41,494 - #49 1
INFO  00:01:41,494 - #20 ]
INFO  00:01:41,494 - #44 ;
INFO  00:01:41,494 - #18 }
INFO  00:01:41,494 - #16 void
INFO  00:01:41,495 - #50 main
INFO  00:01:41,495 - #21 (
INFO  00:01:41,495 - #22 )
INFO  00:01:41,495 - #50 int
INFO  00:01:41,495 - #50 x
INFO  00:01:41,495 - #45 ,
INFO  00:01:41,495 - #50 i
INFO  00:01:41,495 - #44 ;
INFO  00:01:41,496 - #50 char
INFO  00:01:41,496 - #50 c
INFO  00:01:41,496 - #44 ;
INFO  00:01:41,496 - #17 {
INFO  00:01:41,496 - #50 val
INFO  00:01:41,496 - #28 =
INFO  00:01:41,496 - #10 new
INFO  00:01:41,496 - #50 Table
INFO  00:01:41,496 - #44 ;
INFO  00:01:41,497 - #50 val
INFO  00:01:41,497 - #46 .
INFO  00:01:41,497 - #50 pos
INFO  00:01:41,501 - #28 =
INFO  00:01:41,501 - #10 new
INFO  00:01:41,501 - #50 int
INFO  00:01:41,501 - #19 [
INFO  00:01:41,501 - #50 size
INFO  00:01:41,501 - #20 ]
INFO  00:01:41,502 - #44 ;
INFO  00:01:41,502 - #50 val
INFO  00:01:41,502 - #46 .
INFO  00:01:41,502 - #50 neg
INFO  00:01:41,502 - #28 =
INFO  00:01:41,502 - #10 new
INFO  00:01:41,502 - #50 int
INFO  00:01:41,503 - #19 [
INFO  00:01:41,503 - #50 size
INFO  00:01:41,503 - #20 ]
INFO  00:01:41,503 - #44 ;
INFO  00:01:41,503 - #8 for
INFO  00:01:41,503 - #21 (
INFO  00:01:41,503 - #50 i
INFO  00:01:41,503 - #28 =
INFO  00:01:41,503 - #49 0
INFO  00:01:41,503 - #44 ;
INFO  00:01:41,503 - #50 i
INFO  00:01:41,503 - #39 <
INFO  00:01:41,505 - #50 size
INFO  00:01:41,505 - #44 ;
INFO  00:01:41,505 - #50 i
INFO  00:01:41,505 - #41 ++
INFO  00:01:41,505 - #22 )
INFO  00:01:41,505 - #17 {
INFO  00:01:41,505 - #50 val
INFO  00:01:41,505 - #46 .
INFO  00:01:41,505 - #50 putp
INFO  00:01:41,505 - #21 (
INFO  00:01:41,505 - #49 0
INFO  00:01:41,505 - #45 ,
INFO  00:01:41,505 - #50 i
INFO  00:01:41,505 - #22 )
INFO  00:01:41,505 - #44 ;
INFO  00:01:41,505 - #50 val
INFO  00:01:41,505 - #46 .
INFO  00:01:41,505 - #50 putn
INFO  00:01:41,505 - #21 (
INFO  00:01:41,505 - #49 0
INFO  00:01:41,505 - #45 ,
INFO  00:01:41,505 - #50 i
INFO  00:01:41,505 - #22 )
INFO  00:01:41,506 - #44 ;
INFO  00:01:41,506 - #18 }
INFO  00:01:41,506 - #50 f
INFO  00:01:41,506 - #21 (
INFO  00:01:41,506 - #50 c
INFO  00:01:41,506 - #45 ,
INFO  00:01:41,506 - #50 x
INFO  00:01:41,506 - #45 ,
INFO  00:01:41,506 - #50 i
INFO  00:01:41,506 - #45 ,
INFO  00:01:41,506 - #50 size
INFO  00:01:41,506 - #22 )
INFO  00:01:41,506 - #44 ;
INFO  00:01:41,506 - #13 read
INFO  00:01:41,506 - #21 (
INFO  00:01:41,506 - #50 x
INFO  00:01:41,506 - #22 )
INFO  00:01:41,506 - #44 ;
INFO  00:01:41,506 - #8 for
INFO  00:01:41,506 - #21 (
INFO  00:01:41,506 - #44 ;
INFO  00:01:41,506 - #50 x
INFO  00:01:41,507 - #38 >
INFO  00:01:41,507 - #49 0
INFO  00:01:41,507 - #44 ;
INFO  00:01:41,507 - #22 )
INFO  00:01:41,507 - #17 {
INFO  00:01:41,507 - #9 if
INFO  00:01:41,507 - #21 (
INFO  00:01:41,507 - #49 0
INFO  00:01:41,507 - #37 <=
INFO  00:01:41,507 - #50 x
INFO  00:01:41,507 - #43 &&
INFO  00:01:41,507 - #50 x
INFO  00:01:41,507 - #39 <
INFO  00:01:41,507 - #50 size
INFO  00:01:41,507 - #22 )
INFO  00:01:41,507 - #17 {
INFO  00:01:41,507 - #50 val
INFO  00:01:41,507 - #46 .
INFO  00:01:41,507 - #50 putp
INFO  00:01:41,507 - #21 (
INFO  00:01:41,508 - #50 val
INFO  00:01:41,508 - #46 .
INFO  00:01:41,508 - #50 getp
INFO  00:01:41,508 - #21 (
INFO  00:01:41,508 - #50 x
INFO  00:01:41,508 - #22 )
INFO  00:01:41,508 - #23 +
INFO  00:01:41,508 - #49 1
INFO  00:01:41,508 - #22 )
INFO  00:01:41,508 - #44 ;
INFO  00:01:41,508 - #18 }
INFO  00:01:41,508 - #6 else
INFO  00:01:41,508 - #9 if
INFO  00:01:41,508 - #21 (
INFO  00:01:41,508 - #50 size
INFO  00:01:41,508 - #39 <
INFO  00:01:41,509 - #50 x
INFO  00:01:41,509 - #43 &&
INFO  00:01:41,509 - #50 x
INFO  00:01:41,509 - #39 <
INFO  00:01:41,509 - #49 0
INFO  00:01:41,509 - #22 )
INFO  00:01:41,509 - #17 {
INFO  00:01:41,509 - #50 val
INFO  00:01:41,509 - #46 .
INFO  00:01:41,509 - #50 putn
INFO  00:01:41,509 - #21 (
INFO  00:01:41,509 - #50 val
INFO  00:01:41,509 - #46 .
INFO  00:01:41,510 - #50 getn
INFO  00:01:41,510 - #21 (
INFO  00:01:41,511 - #50 x
INFO  00:01:41,511 - #22 )
INFO  00:01:41,511 - #23 +
INFO  00:01:41,511 - #49 1
INFO  00:01:41,511 - #22 )
INFO  00:01:41,511 - #44 ;
INFO  00:01:41,511 - #18 }
INFO  00:01:41,511 - #13 read
INFO  00:01:41,511 - #21 (
INFO  00:01:41,511 - #50 x
INFO  00:01:41,511 - #22 )
INFO  00:01:41,511 - #44 ;
INFO  00:01:41,511 - #18 }
INFO  00:01:41,511 - #18 }
INFO  00:01:41,511 - #18 }
INFO  00:01:41,511 - globalVariableCount = 1
INFO  00:01:41,511 - globalConstVariableCount = 1
INFO  00:01:41,512 - classVariableCount = 0
INFO  00:01:41,512 - mainVariableCount = 0
INFO  00:01:41,512 - globalClassFunctionCount = 4
INFO  00:01:41,512 - staticClassFunctionCount = 0
INFO  00:01:41,512 - globalFunctionCount = 2
INFO  00:01:41,512 - formalParamsCount = 9
INFO  00:01:41,512 - classCount = 1
