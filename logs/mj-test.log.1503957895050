INFO  00:01:42,620 - Compiling source file: C:\Users\Jelena\workspace\ModernJavaCompiler\test\program.mj
INFO  00:01:42,630 - #12 program
INFO  00:01:42,630 - #50 P
INFO  00:01:42,630 - #4 const
INFO  00:01:42,630 - #50 int
INFO  00:01:42,630 - #50 size
INFO  00:01:42,631 - #28 =
INFO  00:01:42,631 - #49 10
INFO  00:01:42,631 - #44 ;
INFO  00:01:42,631 - #3 class
INFO  00:01:42,631 - #50 Table
INFO  00:01:42,631 - #17 {
INFO  00:01:42,631 - #50 int
INFO  00:01:42,631 - #50 pos
INFO  00:01:42,631 - #19 [
INFO  00:01:42,631 - #20 ]
INFO  00:01:42,631 - #45 ,
INFO  00:01:42,631 - #50 neg
INFO  00:01:42,632 - #19 [
INFO  00:01:42,632 - #20 ]
INFO  00:01:42,632 - #44 ;
INFO  00:01:42,632 - #17 {
INFO  00:01:42,632 - #16 void
INFO  00:01:42,635 - #50 putp
INFO  00:01:42,635 - #21 (
INFO  00:01:42,635 - #50 int
INFO  00:01:42,635 - #50 a
INFO  00:01:42,635 - #45 ,
INFO  00:01:42,635 - #50 int
INFO  00:01:42,635 - #50 idx
INFO  00:01:42,636 - #22 )
INFO  00:01:42,636 - #17 {
INFO  00:01:42,636 - #50 this
INFO  00:01:42,636 - #46 .
INFO  00:01:42,636 - #50 pos
INFO  00:01:42,636 - #19 [
INFO  00:01:42,636 - #50 idx
INFO  00:01:42,636 - #20 ]
INFO  00:01:42,636 - #28 =
INFO  00:01:42,636 - #50 a
INFO  00:01:42,636 - #44 ;
INFO  00:01:42,636 - #18 }
INFO  00:01:42,636 - #16 void
INFO  00:01:42,636 - #50 putn
INFO  00:01:42,636 - #21 (
INFO  00:01:42,636 - #50 int
INFO  00:01:42,637 - #50 a
INFO  00:01:42,637 - #45 ,
INFO  00:01:42,637 - #50 int
INFO  00:01:42,637 - #50 idx
INFO  00:01:42,637 - #22 )
INFO  00:01:42,637 - #17 {
INFO  00:01:42,637 - #50 this
INFO  00:01:42,637 - #46 .
INFO  00:01:42,637 - #50 neg
INFO  00:01:42,637 - #19 [
INFO  00:01:42,637 - #50 idx
INFO  00:01:42,637 - #20 ]
INFO  00:01:42,637 - #28 =
INFO  00:01:42,637 - #50 a
INFO  00:01:42,637 - #44 ;
INFO  00:01:42,637 - #18 }
INFO  00:01:42,637 - #50 int
INFO  00:01:42,638 - #50 getp
INFO  00:01:42,638 - #21 (
INFO  00:01:42,638 - #50 int
INFO  00:01:42,638 - #50 idx
INFO  00:01:42,638 - #22 )
INFO  00:01:42,638 - #17 {
INFO  00:01:42,638 - #14 return
INFO  00:01:42,638 - #50 pos
INFO  00:01:42,638 - #19 [
INFO  00:01:42,638 - #50 idx
INFO  00:01:42,638 - #20 ]
INFO  00:01:42,638 - #44 ;
INFO  00:01:42,638 - #18 }
INFO  00:01:42,638 - #50 int
INFO  00:01:42,638 - #50 getn
INFO  00:01:42,638 - #21 (
INFO  00:01:42,638 - #50 int
INFO  00:01:42,639 - #50 idx
INFO  00:01:42,639 - #22 )
INFO  00:01:42,639 - #17 {
INFO  00:01:42,639 - #14 return
INFO  00:01:42,639 - #50 neg
INFO  00:01:42,639 - #19 [
INFO  00:01:42,639 - #50 idx
INFO  00:01:42,639 - #20 ]
INFO  00:01:42,639 - #44 ;
INFO  00:01:42,639 - #18 }
INFO  00:01:42,640 - #18 }
INFO  00:01:42,640 - #18 }
INFO  00:01:42,640 - #50 Table
INFO  00:01:42,640 - #50 val
INFO  00:01:42,640 - #44 ;
INFO  00:01:42,640 - #17 {
INFO  00:01:42,640 - #16 void
INFO  00:01:42,640 - #50 f
INFO  00:01:42,640 - #21 (
INFO  00:01:42,640 - #50 char
INFO  00:01:42,640 - #50 ch
INFO  00:01:42,640 - #45 ,
INFO  00:01:42,641 - #50 int
INFO  00:01:42,641 - #50 a
INFO  00:01:42,641 - #45 ,
INFO  00:01:42,641 - #50 int
INFO  00:01:42,641 - #46 .
INFO  00:01:42,641 - #46 .
INFO  00:01:42,641 - #46 .
INFO  00:01:42,641 - #50 vargs
INFO  00:01:42,641 - #22 )
INFO  00:01:42,641 - #50 int
INFO  00:01:42,641 - #50 x
INFO  00:01:42,641 - #44 ;
INFO  00:01:42,641 - #17 {
INFO  00:01:42,641 - #50 x
INFO  00:01:42,641 - #28 =
INFO  00:01:42,642 - #50 vargs
INFO  00:01:42,642 - #19 [
INFO  00:01:42,642 - #49 1
INFO  00:01:42,642 - #20 ]
INFO  00:01:42,642 - #44 ;
INFO  00:01:42,642 - #18 }
INFO  00:01:42,642 - #16 void
INFO  00:01:42,642 - #50 main
INFO  00:01:42,642 - #21 (
INFO  00:01:42,642 - #22 )
INFO  00:01:42,642 - #50 int
INFO  00:01:42,643 - #50 x
INFO  00:01:42,643 - #45 ,
INFO  00:01:42,643 - #50 i
INFO  00:01:42,643 - #44 ;
INFO  00:01:42,643 - #50 char
INFO  00:01:42,643 - #50 c
INFO  00:01:42,643 - #44 ;
INFO  00:01:42,643 - #17 {
INFO  00:01:42,643 - #50 val
INFO  00:01:42,643 - #28 =
INFO  00:01:42,644 - #10 new
INFO  00:01:42,644 - #50 Table
INFO  00:01:42,644 - #44 ;
INFO  00:01:42,644 - #50 val
INFO  00:01:42,644 - #46 .
INFO  00:01:42,644 - #50 pos
INFO  00:01:42,644 - #28 =
INFO  00:01:42,644 - #10 new
INFO  00:01:42,644 - #50 int
INFO  00:01:42,644 - #19 [
INFO  00:01:42,645 - #50 size
INFO  00:01:42,645 - #20 ]
INFO  00:01:42,645 - #44 ;
INFO  00:01:42,645 - #50 val
INFO  00:01:42,645 - #46 .
INFO  00:01:42,645 - #50 neg
INFO  00:01:42,645 - #28 =
INFO  00:01:42,645 - #10 new
INFO  00:01:42,645 - #50 int
INFO  00:01:42,645 - #19 [
INFO  00:01:42,645 - #50 size
INFO  00:01:42,646 - #20 ]
INFO  00:01:42,646 - #44 ;
INFO  00:01:42,646 - #8 for
INFO  00:01:42,646 - #21 (
INFO  00:01:42,646 - #50 i
INFO  00:01:42,647 - #28 =
INFO  00:01:42,647 - #49 0
INFO  00:01:42,647 - #44 ;
INFO  00:01:42,647 - #50 i
INFO  00:01:42,647 - #39 <
INFO  00:01:42,647 - #50 size
INFO  00:01:42,647 - #44 ;
INFO  00:01:42,647 - #50 i
INFO  00:01:42,648 - #41 ++
INFO  00:01:42,648 - #22 )
INFO  00:01:42,648 - #17 {
INFO  00:01:42,648 - #50 val
INFO  00:01:42,648 - #46 .
INFO  00:01:42,648 - #50 putp
INFO  00:01:42,648 - #21 (
INFO  00:01:42,648 - #49 0
INFO  00:01:42,648 - #45 ,
INFO  00:01:42,648 - #50 i
INFO  00:01:42,649 - #22 )
INFO  00:01:42,649 - #44 ;
INFO  00:01:42,649 - #50 val
INFO  00:01:42,649 - #46 .
INFO  00:01:42,649 - #50 putn
INFO  00:01:42,649 - #21 (
INFO  00:01:42,649 - #49 0
INFO  00:01:42,649 - #45 ,
INFO  00:01:42,649 - #50 i
INFO  00:01:42,649 - #22 )
INFO  00:01:42,649 - #44 ;
INFO  00:01:42,649 - #18 }
INFO  00:01:42,649 - #50 f
INFO  00:01:42,649 - #21 (
INFO  00:01:42,650 - #50 c
INFO  00:01:42,650 - #45 ,
INFO  00:01:42,650 - #50 x
INFO  00:01:42,651 - #45 ,
INFO  00:01:42,651 - #50 i
INFO  00:01:42,651 - #45 ,
INFO  00:01:42,651 - #50 size
INFO  00:01:42,651 - #22 )
INFO  00:01:42,651 - #44 ;
INFO  00:01:42,651 - #13 read
INFO  00:01:42,652 - #21 (
INFO  00:01:42,652 - #50 x
INFO  00:01:42,652 - #22 )
INFO  00:01:42,652 - #44 ;
INFO  00:01:42,652 - #8 for
INFO  00:01:42,652 - #21 (
INFO  00:01:42,652 - #44 ;
INFO  00:01:42,652 - #50 x
INFO  00:01:42,652 - #38 >
INFO  00:01:42,652 - #49 0
INFO  00:01:42,652 - #44 ;
INFO  00:01:42,652 - #22 )
INFO  00:01:42,652 - #17 {
INFO  00:01:42,652 - #9 if
INFO  00:01:42,652 - #21 (
INFO  00:01:42,652 - #49 0
INFO  00:01:42,652 - #37 <=
INFO  00:01:42,652 - #50 x
INFO  00:01:42,652 - #43 &&
INFO  00:01:42,653 - #50 x
INFO  00:01:42,653 - #39 <
INFO  00:01:42,653 - #50 size
INFO  00:01:42,653 - #22 )
INFO  00:01:42,654 - #17 {
INFO  00:01:42,654 - #50 val
INFO  00:01:42,654 - #46 .
INFO  00:01:42,654 - #50 putp
INFO  00:01:42,654 - #21 (
INFO  00:01:42,654 - #50 val
INFO  00:01:42,654 - #46 .
INFO  00:01:42,654 - #50 getp
INFO  00:01:42,655 - #21 (
INFO  00:01:42,655 - #50 x
INFO  00:01:42,655 - #22 )
INFO  00:01:42,655 - #23 +
INFO  00:01:42,655 - #49 1
INFO  00:01:42,655 - #22 )
INFO  00:01:42,655 - #44 ;
INFO  00:01:42,655 - #18 }
INFO  00:01:42,655 - #6 else
INFO  00:01:42,655 - #9 if
INFO  00:01:42,655 - #21 (
INFO  00:01:42,655 - #50 size
INFO  00:01:42,655 - #39 <
INFO  00:01:42,655 - #50 x
INFO  00:01:42,655 - #43 &&
INFO  00:01:42,655 - #50 x
INFO  00:01:42,656 - #39 <
INFO  00:01:42,656 - #49 0
INFO  00:01:42,656 - #22 )
INFO  00:01:42,656 - #17 {
INFO  00:01:42,656 - #50 val
INFO  00:01:42,656 - #46 .
INFO  00:01:42,656 - #50 putn
INFO  00:01:42,656 - #21 (
INFO  00:01:42,656 - #50 val
INFO  00:01:42,656 - #46 .
INFO  00:01:42,656 - #50 getn
INFO  00:01:42,656 - #21 (
INFO  00:01:42,657 - #50 x
INFO  00:01:42,657 - #22 )
INFO  00:01:42,657 - #23 +
INFO  00:01:42,657 - #49 1
INFO  00:01:42,657 - #22 )
INFO  00:01:42,657 - #44 ;
INFO  00:01:42,657 - #18 }
INFO  00:01:42,657 - #13 read
INFO  00:01:42,657 - #21 (
INFO  00:01:42,657 - #50 x
INFO  00:01:42,657 - #22 )
INFO  00:01:42,657 - #44 ;
INFO  00:01:42,657 - #18 }
INFO  00:01:42,657 - #18 }
INFO  00:01:42,657 - #18 }
INFO  00:01:42,657 - globalVariableCount = 1
INFO  00:01:42,658 - globalConstVariableCount = 1
INFO  00:01:42,658 - classVariableCount = 0
INFO  00:01:42,658 - mainVariableCount = 0
INFO  00:01:42,658 - globalClassFunctionCount = 4
INFO  00:01:42,658 - staticClassFunctionCount = 0
INFO  00:01:42,658 - globalFunctionCount = 2
INFO  00:01:42,658 - formalParamsCount = 9
INFO  00:01:42,658 - classCount = 1
