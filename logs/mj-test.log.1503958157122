INFO  00:04:55,054 - Compiling source file: C:\Users\Jelena\workspace\ModernJavaCompiler\test\program.mj
INFO  00:04:55,065 - #12 program
INFO  00:04:55,065 - #50 P
INFO  00:04:55,065 - #4 const
INFO  00:04:55,065 - #50 int
INFO  00:04:55,065 - #50 size
INFO  00:04:55,065 - #28 =
INFO  00:04:55,065 - #49 10
INFO  00:04:55,065 - #44 ;
INFO  00:04:55,065 - #3 class
INFO  00:04:55,066 - #50 Table
INFO  00:04:55,066 - #17 {
INFO  00:04:55,066 - #50 int
INFO  00:04:55,066 - #50 pos
INFO  00:04:55,066 - #19 [
INFO  00:04:55,066 - #20 ]
INFO  00:04:55,066 - #45 ,
INFO  00:04:55,066 - #50 neg
INFO  00:04:55,066 - #19 [
INFO  00:04:55,066 - #20 ]
INFO  00:04:55,066 - #44 ;
INFO  00:04:55,066 - #17 {
INFO  00:04:55,066 - #16 void
INFO  00:04:55,070 - #50 putp
INFO  00:04:55,070 - #21 (
INFO  00:04:55,070 - #50 int
INFO  00:04:55,070 - #50 a
INFO  00:04:55,070 - #45 ,
INFO  00:04:55,070 - #50 int
INFO  00:04:55,070 - #50 idx
INFO  00:04:55,070 - #22 )
INFO  00:04:55,070 - #17 {
INFO  00:04:55,070 - #50 this
INFO  00:04:55,070 - #46 .
INFO  00:04:55,070 - #50 pos
INFO  00:04:55,070 - #19 [
INFO  00:04:55,070 - #50 idx
INFO  00:04:55,070 - #20 ]
INFO  00:04:55,070 - #28 =
INFO  00:04:55,071 - #50 a
INFO  00:04:55,071 - #44 ;
INFO  00:04:55,071 - #18 }
INFO  00:04:55,071 - #16 void
INFO  00:04:55,071 - #50 putn
INFO  00:04:55,071 - #21 (
INFO  00:04:55,071 - #50 int
INFO  00:04:55,071 - #50 a
INFO  00:04:55,071 - #45 ,
INFO  00:04:55,072 - #50 int
INFO  00:04:55,072 - #50 idx
INFO  00:04:55,072 - #22 )
INFO  00:04:55,072 - #17 {
INFO  00:04:55,072 - #50 this
INFO  00:04:55,072 - #46 .
INFO  00:04:55,072 - #50 neg
INFO  00:04:55,072 - #19 [
INFO  00:04:55,072 - #50 idx
INFO  00:04:55,072 - #20 ]
INFO  00:04:55,072 - #28 =
INFO  00:04:55,072 - #50 a
INFO  00:04:55,073 - #44 ;
INFO  00:04:55,073 - #18 }
INFO  00:04:55,073 - #50 int
INFO  00:04:55,073 - #50 getp
INFO  00:04:55,073 - #21 (
INFO  00:04:55,073 - #50 int
INFO  00:04:55,073 - #50 idx
INFO  00:04:55,073 - #22 )
INFO  00:04:55,073 - #17 {
INFO  00:04:55,073 - #14 return
INFO  00:04:55,073 - #50 pos
INFO  00:04:55,073 - #19 [
INFO  00:04:55,073 - #50 idx
INFO  00:04:55,073 - #20 ]
INFO  00:04:55,073 - #44 ;
INFO  00:04:55,073 - #18 }
INFO  00:04:55,074 - #50 int
INFO  00:04:55,074 - #50 getn
INFO  00:04:55,074 - #21 (
INFO  00:04:55,074 - #50 int
INFO  00:04:55,074 - #50 idx
INFO  00:04:55,074 - #22 )
INFO  00:04:55,074 - #17 {
INFO  00:04:55,074 - #14 return
INFO  00:04:55,074 - #50 neg
INFO  00:04:55,074 - #19 [
INFO  00:04:55,074 - #50 idx
INFO  00:04:55,074 - #20 ]
INFO  00:04:55,074 - #44 ;
INFO  00:04:55,074 - #18 }
INFO  00:04:55,074 - #18 }
INFO  00:04:55,074 - #18 }
INFO  00:04:55,075 - #50 Table
INFO  00:04:55,075 - #50 val
INFO  00:04:55,075 - #44 ;
INFO  00:04:55,075 - #17 {
INFO  00:04:55,076 - #16 void
INFO  00:04:55,076 - #50 f
INFO  00:04:55,076 - #21 (
INFO  00:04:55,076 - #50 char
INFO  00:04:55,076 - #50 ch
INFO  00:04:55,076 - #45 ,
INFO  00:04:55,076 - #50 int
INFO  00:04:55,076 - #50 a
INFO  00:04:55,076 - #45 ,
INFO  00:04:55,076 - #50 int
INFO  00:04:55,077 - #46 .
INFO  00:04:55,077 - #46 .
INFO  00:04:55,077 - #46 .
INFO  00:04:55,077 - #50 vargs
INFO  00:04:55,077 - #22 )
INFO  00:04:55,077 - #50 int
INFO  00:04:55,077 - #50 x
INFO  00:04:55,077 - #44 ;
INFO  00:04:55,077 - #17 {
INFO  00:04:55,077 - #50 x
INFO  00:04:55,077 - #28 =
INFO  00:04:55,077 - #50 vargs
INFO  00:04:55,077 - #19 [
INFO  00:04:55,077 - #49 1
INFO  00:04:55,077 - #20 ]
INFO  00:04:55,077 - #44 ;
INFO  00:04:55,078 - #18 }
INFO  00:04:55,078 - #16 void
INFO  00:04:55,078 - #50 main
INFO  00:04:55,078 - #21 (
INFO  00:04:55,078 - #22 )
INFO  00:04:55,078 - #50 int
INFO  00:04:55,078 - #50 x
INFO  00:04:55,078 - #45 ,
INFO  00:04:55,078 - #50 i
INFO  00:04:55,078 - #44 ;
INFO  00:04:55,078 - #50 char
INFO  00:04:55,079 - #50 c
INFO  00:04:55,079 - #44 ;
INFO  00:04:55,080 - #17 {
INFO  00:04:55,080 - #50 val
INFO  00:04:55,080 - #28 =
INFO  00:04:55,080 - #10 new
INFO  00:04:55,080 - #50 Table
INFO  00:04:55,080 - #44 ;
INFO  00:04:55,080 - #50 val
INFO  00:04:55,080 - #46 .
INFO  00:04:55,080 - #50 pos
INFO  00:04:55,081 - #28 =
INFO  00:04:55,081 - #10 new
INFO  00:04:55,081 - #50 int
INFO  00:04:55,081 - #19 [
INFO  00:04:55,081 - #50 size
INFO  00:04:55,081 - #20 ]
INFO  00:04:55,081 - #44 ;
INFO  00:04:55,081 - #50 val
INFO  00:04:55,081 - #46 .
INFO  00:04:55,081 - #50 neg
INFO  00:04:55,081 - #28 =
INFO  00:04:55,081 - #10 new
INFO  00:04:55,082 - #50 int
INFO  00:04:55,082 - #19 [
INFO  00:04:55,082 - #50 size
INFO  00:04:55,082 - #20 ]
INFO  00:04:55,082 - #44 ;
INFO  00:04:55,082 - #8 for
INFO  00:04:55,082 - #21 (
INFO  00:04:55,082 - #50 i
INFO  00:04:55,082 - #28 =
INFO  00:04:55,082 - #49 0
INFO  00:04:55,082 - #44 ;
INFO  00:04:55,082 - #50 i
INFO  00:04:55,082 - #39 <
INFO  00:04:55,082 - #50 size
INFO  00:04:55,082 - #44 ;
INFO  00:04:55,082 - #50 i
INFO  00:04:55,083 - #41 ++
INFO  00:04:55,083 - #22 )
INFO  00:04:55,083 - #17 {
INFO  00:04:55,083 - #50 val
INFO  00:04:55,083 - #46 .
INFO  00:04:55,083 - #50 putp
INFO  00:04:55,083 - #21 (
INFO  00:04:55,083 - #49 0
INFO  00:04:55,083 - #45 ,
INFO  00:04:55,083 - #50 i
INFO  00:04:55,083 - #22 )
INFO  00:04:55,083 - #44 ;
INFO  00:04:55,083 - #50 val
INFO  00:04:55,083 - #46 .
INFO  00:04:55,083 - #50 putn
INFO  00:04:55,083 - #21 (
INFO  00:04:55,083 - #49 0
INFO  00:04:55,083 - #45 ,
INFO  00:04:55,084 - #50 i
INFO  00:04:55,084 - #22 )
INFO  00:04:55,084 - #44 ;
INFO  00:04:55,084 - #18 }
INFO  00:04:55,084 - #50 f
INFO  00:04:55,084 - #21 (
INFO  00:04:55,084 - #50 c
INFO  00:04:55,084 - #45 ,
INFO  00:04:55,084 - #50 x
INFO  00:04:55,084 - #45 ,
INFO  00:04:55,084 - #50 i
INFO  00:04:55,084 - #45 ,
INFO  00:04:55,084 - #50 size
INFO  00:04:55,085 - #22 )
INFO  00:04:55,085 - #44 ;
INFO  00:04:55,085 - #13 read
INFO  00:04:55,085 - #21 (
INFO  00:04:55,085 - #50 x
INFO  00:04:55,085 - #22 )
INFO  00:04:55,085 - #44 ;
INFO  00:04:55,085 - #8 for
INFO  00:04:55,085 - #21 (
INFO  00:04:55,085 - #44 ;
INFO  00:04:55,085 - #50 x
INFO  00:04:55,085 - #38 >
INFO  00:04:55,085 - #49 0
INFO  00:04:55,085 - #44 ;
INFO  00:04:55,085 - #22 )
INFO  00:04:55,085 - #17 {
INFO  00:04:55,085 - #9 if
INFO  00:04:55,085 - #21 (
INFO  00:04:55,086 - #49 0
INFO  00:04:55,086 - #37 <=
INFO  00:04:55,086 - #50 x
INFO  00:04:55,086 - #43 &&
INFO  00:04:55,086 - #50 x
INFO  00:04:55,086 - #39 <
INFO  00:04:55,086 - #50 size
INFO  00:04:55,086 - #22 )
INFO  00:04:55,086 - #17 {
INFO  00:04:55,086 - #50 val
INFO  00:04:55,086 - #46 .
INFO  00:04:55,086 - #50 putp
INFO  00:04:55,086 - #21 (
INFO  00:04:55,086 - #50 val
INFO  00:04:55,086 - #46 .
INFO  00:04:55,086 - #50 getp
INFO  00:04:55,086 - #21 (
INFO  00:04:55,087 - #50 x
INFO  00:04:55,087 - #22 )
INFO  00:04:55,087 - #23 +
INFO  00:04:55,087 - #49 1
INFO  00:04:55,088 - #22 )
INFO  00:04:55,088 - #44 ;
INFO  00:04:55,088 - #18 }
INFO  00:04:55,089 - #6 else
INFO  00:04:55,089 - #9 if
INFO  00:04:55,089 - #21 (
INFO  00:04:55,089 - #50 size
INFO  00:04:55,089 - #39 <
INFO  00:04:55,089 - #50 x
INFO  00:04:55,089 - #43 &&
INFO  00:04:55,089 - #50 x
INFO  00:04:55,089 - #39 <
INFO  00:04:55,089 - #49 0
INFO  00:04:55,089 - #22 )
INFO  00:04:55,090 - #17 {
INFO  00:04:55,090 - #50 val
INFO  00:04:55,090 - #46 .
INFO  00:04:55,090 - #50 putn
INFO  00:04:55,090 - #21 (
INFO  00:04:55,090 - #50 val
INFO  00:04:55,090 - #46 .
INFO  00:04:55,090 - #50 getn
INFO  00:04:55,090 - #21 (
INFO  00:04:55,090 - #50 x
INFO  00:04:55,090 - #22 )
INFO  00:04:55,090 - #23 +
INFO  00:04:55,090 - #49 1
INFO  00:04:55,091 - #22 )
INFO  00:04:55,091 - #44 ;
INFO  00:04:55,091 - #18 }
INFO  00:04:55,091 - #13 read
INFO  00:04:55,091 - #21 (
INFO  00:04:55,091 - #50 x
INFO  00:04:55,091 - #22 )
INFO  00:04:55,091 - #44 ;
INFO  00:04:55,091 - #18 }
INFO  00:04:55,091 - #18 }
INFO  00:04:55,091 - #18 }
INFO  00:04:55,091 - globalVariableCount = 1
INFO  00:04:55,091 - globalConstVariableCount = 1
INFO  00:04:55,091 - classVariableCount = 0
INFO  00:04:55,092 - mainVariableCount = 0
INFO  00:04:55,092 - globalClassFunctionCount = 4
INFO  00:04:55,092 - staticClassFunctionCount = 0
INFO  00:04:55,092 - globalFunctionCount = 2
INFO  00:04:55,092 - formalParamsCount = 9
INFO  00:04:55,092 - classCount = 1
