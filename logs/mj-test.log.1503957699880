INFO  00:01:33,558 - Compiling source file: C:\Users\Jelena\workspace\ModernJavaCompiler\test\program.mj
INFO  00:01:33,568 - #12 program
INFO  00:01:33,568 - #50 P
INFO  00:01:33,568 - #4 const
INFO  00:01:33,568 - #50 int
INFO  00:01:33,568 - #50 size
INFO  00:01:33,568 - #28 =
INFO  00:01:33,569 - #49 10
INFO  00:01:33,569 - #44 ;
INFO  00:01:33,569 - #3 class
INFO  00:01:33,569 - #50 Table
INFO  00:01:33,569 - #17 {
INFO  00:01:33,569 - #50 int
INFO  00:01:33,569 - #50 pos
INFO  00:01:33,569 - #19 [
INFO  00:01:33,569 - #20 ]
INFO  00:01:33,569 - #45 ,
INFO  00:01:33,569 - #50 neg
INFO  00:01:33,569 - #19 [
INFO  00:01:33,569 - #20 ]
INFO  00:01:33,569 - #44 ;
INFO  00:01:33,570 - #17 {
INFO  00:01:33,570 - #16 void
INFO  00:01:33,573 - #50 putp
INFO  00:01:33,573 - #21 (
INFO  00:01:33,573 - #50 int
INFO  00:01:33,573 - #50 a
INFO  00:01:33,573 - #45 ,
INFO  00:01:33,573 - #50 int
INFO  00:01:33,573 - #50 idx
INFO  00:01:33,573 - #22 )
INFO  00:01:33,573 - #17 {
INFO  00:01:33,573 - #50 this
INFO  00:01:33,573 - #46 .
INFO  00:01:33,573 - #50 pos
INFO  00:01:33,573 - #19 [
INFO  00:01:33,573 - #50 idx
INFO  00:01:33,573 - #20 ]
INFO  00:01:33,574 - #28 =
INFO  00:01:33,574 - #50 a
INFO  00:01:33,574 - #44 ;
INFO  00:01:33,574 - #18 }
INFO  00:01:33,574 - #16 void
INFO  00:01:33,574 - #50 putn
INFO  00:01:33,574 - #21 (
INFO  00:01:33,574 - #50 int
INFO  00:01:33,574 - #50 a
INFO  00:01:33,574 - #45 ,
INFO  00:01:33,574 - #50 int
INFO  00:01:33,574 - #50 idx
INFO  00:01:33,574 - #22 )
INFO  00:01:33,574 - #17 {
INFO  00:01:33,574 - #50 this
INFO  00:01:33,574 - #46 .
INFO  00:01:33,575 - #50 neg
INFO  00:01:33,575 - #19 [
INFO  00:01:33,575 - #50 idx
INFO  00:01:33,575 - #20 ]
INFO  00:01:33,575 - #28 =
INFO  00:01:33,575 - #50 a
INFO  00:01:33,575 - #44 ;
INFO  00:01:33,575 - #18 }
INFO  00:01:33,575 - #50 int
INFO  00:01:33,575 - #50 getp
INFO  00:01:33,575 - #21 (
INFO  00:01:33,575 - #50 int
INFO  00:01:33,575 - #50 idx
INFO  00:01:33,575 - #22 )
INFO  00:01:33,575 - #17 {
INFO  00:01:33,575 - #14 return
INFO  00:01:33,576 - #50 pos
INFO  00:01:33,576 - #19 [
INFO  00:01:33,576 - #50 idx
INFO  00:01:33,576 - #20 ]
INFO  00:01:33,576 - #44 ;
INFO  00:01:33,576 - #18 }
INFO  00:01:33,576 - #50 int
INFO  00:01:33,576 - #50 getn
INFO  00:01:33,576 - #21 (
INFO  00:01:33,576 - #50 int
INFO  00:01:33,576 - #50 idx
INFO  00:01:33,576 - #22 )
INFO  00:01:33,576 - #17 {
INFO  00:01:33,576 - #14 return
INFO  00:01:33,576 - #50 neg
INFO  00:01:33,576 - #19 [
INFO  00:01:33,576 - #50 idx
INFO  00:01:33,576 - #20 ]
INFO  00:01:33,577 - #44 ;
INFO  00:01:33,577 - #18 }
INFO  00:01:33,577 - #18 }
INFO  00:01:33,577 - #18 }
INFO  00:01:33,577 - #50 Table
INFO  00:01:33,577 - #50 val
INFO  00:01:33,577 - #44 ;
INFO  00:01:33,578 - #17 {
INFO  00:01:33,578 - #16 void
INFO  00:01:33,578 - #50 f
INFO  00:01:33,578 - #21 (
INFO  00:01:33,578 - #50 char
INFO  00:01:33,578 - #50 ch
INFO  00:01:33,578 - #45 ,
INFO  00:01:33,578 - #50 int
INFO  00:01:33,578 - #50 a
INFO  00:01:33,578 - #45 ,
INFO  00:01:33,578 - #50 int
INFO  00:01:33,578 - #46 .
INFO  00:01:33,578 - #46 .
INFO  00:01:33,578 - #46 .
INFO  00:01:33,579 - #50 vargs
INFO  00:01:33,579 - #22 )
INFO  00:01:33,579 - #50 int
INFO  00:01:33,579 - #50 x
INFO  00:01:33,579 - #44 ;
INFO  00:01:33,579 - #17 {
INFO  00:01:33,579 - #50 x
INFO  00:01:33,579 - #28 =
INFO  00:01:33,579 - #50 vargs
INFO  00:01:33,579 - #19 [
INFO  00:01:33,579 - #49 1
INFO  00:01:33,579 - #20 ]
INFO  00:01:33,579 - #44 ;
INFO  00:01:33,579 - #18 }
INFO  00:01:33,579 - #16 void
INFO  00:01:33,579 - #50 main
INFO  00:01:33,580 - #21 (
INFO  00:01:33,580 - #22 )
INFO  00:01:33,580 - #50 int
INFO  00:01:33,580 - #50 x
INFO  00:01:33,580 - #45 ,
INFO  00:01:33,580 - #50 i
INFO  00:01:33,580 - #44 ;
INFO  00:01:33,580 - #50 char
INFO  00:01:33,580 - #50 c
INFO  00:01:33,580 - #44 ;
INFO  00:01:33,582 - #17 {
INFO  00:01:33,582 - #50 val
INFO  00:01:33,582 - #28 =
INFO  00:01:33,582 - #10 new
INFO  00:01:33,582 - #50 Table
INFO  00:01:33,582 - #44 ;
INFO  00:01:33,582 - #50 val
INFO  00:01:33,582 - #46 .
INFO  00:01:33,582 - #50 pos
INFO  00:01:33,582 - #28 =
INFO  00:01:33,582 - #10 new
INFO  00:01:33,583 - #50 int
INFO  00:01:33,583 - #19 [
INFO  00:01:33,583 - #50 size
INFO  00:01:33,583 - #20 ]
INFO  00:01:33,583 - #44 ;
INFO  00:01:33,584 - #50 val
INFO  00:01:33,584 - #46 .
INFO  00:01:33,585 - #50 neg
INFO  00:01:33,585 - #28 =
INFO  00:01:33,585 - #10 new
INFO  00:01:33,585 - #50 int
INFO  00:01:33,585 - #19 [
INFO  00:01:33,585 - #50 size
INFO  00:01:33,585 - #20 ]
INFO  00:01:33,585 - #44 ;
INFO  00:01:33,585 - #8 for
INFO  00:01:33,585 - #21 (
INFO  00:01:33,585 - #50 i
INFO  00:01:33,586 - #28 =
INFO  00:01:33,586 - #49 0
INFO  00:01:33,586 - #44 ;
INFO  00:01:33,586 - #50 i
INFO  00:01:33,586 - #39 <
INFO  00:01:33,586 - #50 size
INFO  00:01:33,586 - #44 ;
INFO  00:01:33,586 - #50 i
INFO  00:01:33,586 - #41 ++
INFO  00:01:33,587 - #22 )
INFO  00:01:33,587 - #17 {
INFO  00:01:33,587 - #50 val
INFO  00:01:33,587 - #46 .
INFO  00:01:33,587 - #50 putp
INFO  00:01:33,587 - #21 (
INFO  00:01:33,587 - #49 0
INFO  00:01:33,587 - #45 ,
INFO  00:01:33,587 - #50 i
INFO  00:01:33,587 - #22 )
INFO  00:01:33,587 - #44 ;
INFO  00:01:33,587 - #50 val
INFO  00:01:33,587 - #46 .
INFO  00:01:33,587 - #50 putn
INFO  00:01:33,587 - #21 (
INFO  00:01:33,587 - #49 0
INFO  00:01:33,587 - #45 ,
INFO  00:01:33,587 - #50 i
INFO  00:01:33,587 - #22 )
INFO  00:01:33,588 - #44 ;
INFO  00:01:33,588 - #18 }
INFO  00:01:33,588 - #50 f
INFO  00:01:33,588 - #21 (
INFO  00:01:33,588 - #50 c
INFO  00:01:33,588 - #45 ,
INFO  00:01:33,588 - #50 x
INFO  00:01:33,588 - #45 ,
INFO  00:01:33,588 - #50 i
INFO  00:01:33,588 - #45 ,
INFO  00:01:33,588 - #50 size
INFO  00:01:33,588 - #22 )
INFO  00:01:33,588 - #44 ;
INFO  00:01:33,588 - #13 read
INFO  00:01:33,588 - #21 (
INFO  00:01:33,588 - #50 x
INFO  00:01:33,588 - #22 )
INFO  00:01:33,589 - #44 ;
INFO  00:01:33,589 - #8 for
INFO  00:01:33,589 - #21 (
INFO  00:01:33,589 - #44 ;
INFO  00:01:33,589 - #50 x
INFO  00:01:33,589 - #38 >
INFO  00:01:33,589 - #49 0
INFO  00:01:33,589 - #44 ;
INFO  00:01:33,589 - #22 )
INFO  00:01:33,589 - #17 {
INFO  00:01:33,589 - #9 if
INFO  00:01:33,589 - #21 (
INFO  00:01:33,589 - #49 0
INFO  00:01:33,589 - #37 <=
INFO  00:01:33,589 - #50 x
INFO  00:01:33,589 - #43 &&
INFO  00:01:33,589 - #50 x
INFO  00:01:33,589 - #39 <
INFO  00:01:33,589 - #50 size
INFO  00:01:33,589 - #22 )
INFO  00:01:33,591 - #17 {
INFO  00:01:33,591 - #50 val
INFO  00:01:33,591 - #46 .
INFO  00:01:33,591 - #50 putp
INFO  00:01:33,591 - #21 (
INFO  00:01:33,591 - #50 val
INFO  00:01:33,591 - #46 .
INFO  00:01:33,591 - #50 getp
INFO  00:01:33,591 - #21 (
INFO  00:01:33,591 - #50 x
INFO  00:01:33,591 - #22 )
INFO  00:01:33,591 - #23 +
INFO  00:01:33,591 - #49 1
INFO  00:01:33,591 - #22 )
INFO  00:01:33,591 - #44 ;
INFO  00:01:33,591 - #18 }
INFO  00:01:33,591 - #6 else
INFO  00:01:33,591 - #9 if
INFO  00:01:33,591 - #21 (
INFO  00:01:33,592 - #50 size
INFO  00:01:33,592 - #39 <
INFO  00:01:33,592 - #50 x
INFO  00:01:33,592 - #43 &&
INFO  00:01:33,592 - #50 x
INFO  00:01:33,592 - #39 <
INFO  00:01:33,592 - #49 0
INFO  00:01:33,592 - #22 )
INFO  00:01:33,592 - #17 {
INFO  00:01:33,593 - #50 val
INFO  00:01:33,593 - #46 .
INFO  00:01:33,593 - #50 putn
INFO  00:01:33,593 - #21 (
INFO  00:01:33,593 - #50 val
INFO  00:01:33,593 - #46 .
INFO  00:01:33,593 - #50 getn
INFO  00:01:33,593 - #21 (
INFO  00:01:33,593 - #50 x
INFO  00:01:33,593 - #22 )
INFO  00:01:33,593 - #23 +
INFO  00:01:33,593 - #49 1
INFO  00:01:33,593 - #22 )
INFO  00:01:33,593 - #44 ;
INFO  00:01:33,593 - #18 }
INFO  00:01:33,593 - #13 read
INFO  00:01:33,593 - #21 (
INFO  00:01:33,593 - #50 x
INFO  00:01:33,593 - #22 )
INFO  00:01:33,593 - #44 ;
INFO  00:01:33,593 - #18 }
INFO  00:01:33,594 - #18 }
INFO  00:01:33,594 - #18 }
INFO  00:01:33,594 - globalVariableCount = 1
INFO  00:01:33,594 - globalConstVariableCount = 1
INFO  00:01:33,594 - classVariableCount = 0
INFO  00:01:33,594 - mainVariableCount = 0
INFO  00:01:33,594 - globalClassFunctionCount = 4
INFO  00:01:33,594 - staticClassFunctionCount = 0
INFO  00:01:33,594 - globalFunctionCount = 2
INFO  00:01:33,594 - formalParamsCount = 9
INFO  00:01:33,594 - classCount = 1
